generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPERADMIN
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum Gender {
  MALE
  FEMALE
}

enum VolunteerStatus {
  PENDING
  ACTIVE
  INACTIVE
}

model User {
  id       String     @id @default(uuid())
  email    String     @unique
  password String
  role     UserRole
  status   UserStatus @default(ACTIVE)

  // Relations
  daftarPantis DaftarPanti[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Volunteer {
  id              String          @id @default(uuid())
  namaLengkap     String
  jenisKelamin    Gender
  tempatLahir     String
  tanggalLahir    DateTime
  alamatDomisili  String
  kewarganegaraan String
  nomorHP         String
  email           String          @unique
  wilayahId       String?
  profileImage    String?
  jabatan        String?
  status          VolunteerStatus @default(PENDING)

  // Relation to Wilayah
  wilayah Wilayah? @relation(fields: [wilayahId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wilayah {
  id        String   @id @default(uuid())
  nama      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String   @default("ACTIVE") // Added status field with default value "ACTIVE"

  // Relations
  daftarPantis DaftarPanti[]
  volunteers   Volunteer[]
}

model DaftarPanti {
  id        String   @id @default(uuid())
  judul     String
  subjudul  String?
  gambarUrl String?
  konten    String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  penulis   User     @relation(fields: [penulisId], references: [id])
  penulisId String

  // Relations
  wilayah   Wilayah? @relation(fields: [wilayahId], references: [id])
  wilayahId String?

  detailPantis DetailPanti[]
}

model DetailPanti {
  id                    String   @id @default(uuid())
  namaPanti             String
  yayasanPenaung        String
  fokusPelayanPanti     String
  alamatPanti           String
  jumlahPengasuh        Int
  jumlahPenghuni        Int
  karakteristikPenghuni String?
  jenisSumbangan        Json?
  kebutuhanBantuan      String?
  nomorKontak           Json?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  daftarPanti   DaftarPanti @relation(fields: [daftarPantiId], references: [id])
  daftarPantiId String
}
